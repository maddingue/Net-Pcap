name: Perl

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '42 5 * * *'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest] #, macos-latest, windows-latest
        perl: [ '5.26', '5.28', '5.30', '5.32', '5.34', '5.36' ]
        exclude:
          - runner: windows-latest
            perl: '5.36'

    runs-on: ${{matrix.runner}}
    name: OS ${{matrix.runner}} Perl ${{matrix.perl}}

    steps:
    - uses: actions/checkout@v2

    - name: Set up perl
      uses: shogo82148/actions-setup-perl@v1
      with:
          perl-version: ${{ matrix.perl }}
          distribution: ${{ ( startsWith( matrix.runner, 'windows-' ) && 'strawberry' ) || 'default' }}

    - name: Show Perl Version
      run: |
        perl -v

    - name: Install external dependencies on Ubuntu
      if:  ${{ startsWith( matrix.runner, 'ubuntu-')}}
      run: |
        sudo apt-get install libpcap-dev

    - name: Install Modules
      run: |
        cpanm -v
        cpanm --installdeps --notest .

    - name: Install Extra Modules for testing
      run: |
        cpanm --notest AnyEvent
        cpanm --notest AnyEvent::Pcap
        cpanm --notest Net::Pcap::Easy
        cpanm --notest POE
        cpanm --notest POE::Component::Pcap
        cpanm --notest Test::Distribution
        cpanm --notest Test::Pod
        cpanm --notest Test::Pod::Coverage
        cpanm --notest Test::Spelling
        cpanm --notest Test::Portability::Files

    - name: Show Errors on Windows
      if:  ${{ failure() && startsWith( matrix.runner, 'windows-')}}
      run: |
         ls -l C:/Users/
         ls -l C:/Users/RUNNER~1/
         cat C:/Users/runneradmin/.cpanm/work/*/build.log

    - name: Show Errors on Ubuntu
      if:  ${{ failure() && startsWith( matrix.runner, 'ubuntu-')}}
      run: |
         cat /home/runner/.cpanm/work/*/build.log

    - name: Show Errors on OSX
      if:  ${{ failure() && startsWith( matrix.runner, 'macos-')}}
      run: |
         cat  /Users/runner/.cpanm/work/*/build.log

    - name: Run tests
      env:
        AUTHOR_TESTS: 1
      run: |
        perl Makefile.PL
        make
        mkdir -p releases # this is what is needed to trigger the podspell.t
        make test

    - name: Run tests as root
      env:
        AUTHOR_TESTS: 1
      run: |
        sudo make test

